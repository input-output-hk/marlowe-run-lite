{ repoRoot, inputs, pkgs, lib, system }:

let

  purescript = repoRoot.nix.purescript;

in
lib.iogx.mkShell {

  name = "marlowe-runner";
  env = {
    PLAYWRIGHT_BROWSERS_PATH =
      lib.optionalString (system == "x86_64-linux")
        "${repoRoot.nix.playwright}";

    PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD = "true";
  };

  packages = [
    # Please update spago and purescript in `package.json` `scripts` section
    purescript.purs-0_15_10
    purescript.purescript-language-server
    purescript.purs-backend-es
    purescript.pscid
    purescript.pulp
    purescript.spago
    purescript.spago2nix

    pkgs.jq
    pkgs.prefetch-npm-deps
    pkgs.nodejs-18_x
    pkgs.nodejs-18_x.pkgs.bower
    pkgs.nodejs-18_x.pkgs.jshint
    pkgs.nodejs-18_x.pkgs.webpack
    pkgs.nodejs-18_x.pkgs.webpack-cli
    pkgs.dhall
    pkgs.pkg-config
    pkgs.python38
  ];

  scripts.gen-nix-lockfiles = {
    group = "marlowe-runner";
    description = "Run this whenever package-json.lock or packages.dhall change.";
    exec = ''
      cd "$(git rev-parse --show-toplevel)"

      # We want to use prod.dhall, but `spago2nix` below uses 
      # spago.dhall by default and there doesn't seem to be a way to override it.
      # A PR should probably be opened upstream.
      cp spago.dhall base.dhall
      echo './base.dhall // { backend = "purs-backend-es build" }' > spago.dhall
      spago2nix generate 
      mv spago-packages.nix nix/gen/spago-packages.nix
      mv base.dhall spago.dhall 
      
      echo "# This file was generated by prefetch-npm-deps" > nix/gen/npm-deps-hash.nix
      echo "\"$(prefetch-npm-deps package-lock.json)\"" >> nix/gen/npm-deps-hash.nix
      
      nixpkgs-fmt nix/gen
    '';
  };

  shellHook = ''
    NODE_OPTIONS="--experimental-fetch --trace-warnings"
  '';

  tools = {
    purs-tidy = purescript.purs-tidy;
  };

  preCommit = {
    shellcheck.enable = true;
    nixpkgs-fmt.enable = true;
    purs-tidy.enable = true;
  };
}
